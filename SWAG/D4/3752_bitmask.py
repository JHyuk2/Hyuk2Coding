# 가능한 시험 점수
# 부분집합만들기 - 비트마스크 가능할듯

for tc in range(1,1+int(input())):
    d = input()
    data = map(int, input().split())
    a=1
    for i in data:
        print(bin(a), bin(a<<i))
        print(a, a<<i, a | a<<i)
        a |= a<<i

    print('#%i'%tc, bin(a).count('1'))

'''
# 갓갓님 두분의 조언을 바탕으로 정리한 내용입니다
# 비트마스크

0 => 2^0 (a = 1)
1 => 2^1
2 => 2^2
3 => 2^3
..
5 = 2+3 => 2^5
...

# ex
# bin(a) == 101, 일 때 3이 들어온다면
# (a << i) = 101000 이고, 이는 각각 0+3, 2+3에 들렀음을 의미함.
# 10 9 8 7 6 5 4 3 2 1 0
# ----------------------
# 0 0 0 0 0 0 0 0 1 0 1 ---- a ==> [0, 2]
# 0 0 0 0 0 1 0 1 0 0 0 ---- a << 3 ==> [3, 5]
# 0 0 0 0 0 1 0 1 1 0 1 ---- [0, 2, 3, 5]
#
# <결론>
# 즉 쉬프트연산을 통해 덧셈처럼 사용 가능하고
# 결과적으로 count(1) = 만들 수 있는 숫자의 개수가 됨
'''